{"version":3,"sources":["../src/index.js"],"names":["Mongoose","init","moduleName","defaultConfig","__dirname","setup","Promise","resolve","reject","app","mongoose","connect","config","host","database","db","connection","on","listenError","err","once","listenOpen","callback","log","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,MAAMA,QAAN,wBAA4B;AACzCC,SAAQ;AACN,SAAKC,UAAL,GAAkB,sBAAlB;AACA,SAAKC,aAAL,GAAqBC,SAArB;AACD;;AAEKC,OAAN,GAAe;AAAA;;AAAA;AACb,UAAI;AACF,cAAM,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,gBAAKC,GAAL,CAASC,QAAT,GAAoB,mBAASC,OAAT,CAAkB,aAAY,MAAKC,MAAL,CAAYC,IAAK,IAAG,MAAKD,MAAL,CAAYE,QAAS,EAAvE,CAApB;AACA,gBAAKL,GAAL,CAASC,QAAT,CAAkBJ,OAAlB;;AAEA,gBAAMS,KAAK,MAAKN,GAAL,CAASC,QAAT,CAAkBM,UAA7B;AACAD,aAAGE,EAAH,CAAM,OAAN,EAAe,SAASC,WAAT,CAAsBC,GAAtB,EAA2B;AACxCX,mBAAOW,GAAP;AACD,WAFD;AAGAJ,aAAGK,IAAH,CAAQ,MAAR,EAAgB,SAASC,UAAT,CAAqBC,QAArB,EAA+B;AAC7Cf;AACD,WAFD;AAGD,SAXK,CAAN;AAYD,OAbD,CAaE,OAAOY,GAAP,EAAY;AACZ,cAAKV,GAAL,CAASc,GAAT,CAAaC,KAAb,CAAmBL,GAAnB;AACD;AAhBY;AAiBd;AAvBwC;kBAAtBnB,Q","file":"index.js","sourcesContent":["import Base from 'magnet-core/base'\nimport mongoose from 'mongoose'\nimport bluebird from 'bluebird'\n\nexport default class Mongoose extends Base {\n  init () {\n    this.moduleName = 'magnet_folder_loader'\n    this.defaultConfig = __dirname\n  }\n\n  async setup () {\n    try {\n      await new Promise((resolve, reject) => {\n        this.app.mongoose = mongoose.connect(`mongodb://${this.config.host}/${this.config.database}`)\n        this.app.mongoose.Promise = bluebird\n\n        const db = this.app.mongoose.connection\n        db.on('error', function listenError (err) {\n          reject(err)\n        })\n        db.once('open', function listenOpen (callback) {\n          resolve()\n        })\n      })\n    } catch (err) {\n      this.app.log.error(err)\n    }\n  }\n}\n"]}
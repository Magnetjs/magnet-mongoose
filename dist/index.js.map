{"version":3,"sources":["../src/index.js"],"names":["Mongoose","setup","Promise","resolve","reject","config","Object","assign","mongoose","options","app","connect","host","database","db","connection","on","listenError","err","once","listenOpen","callback","log","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,MAAMA,QAAN,wBAA4B;AACnCC,OAAN,GAAe;AAAA;;AAAA;AACb,UAAI;AACF,cAAM,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,cAAIC,SAASC,OAAOC,MAAP,qBAA6B,MAAKF,MAAL,CAAYG,QAAzC,EAAmD,MAAKC,OAAxD,CAAb;;AAEA,gBAAKC,GAAL,CAASF,QAAT,GAAoB,mBAASG,OAAT,CAAkB,aAAYN,OAAOO,IAAK,IAAGP,OAAOQ,QAAS,EAA7D,CAApB;AACA,gBAAKH,GAAL,CAASF,QAAT,CAAkBN,OAAlB;;AAEA,gBAAMY,KAAK,MAAKJ,GAAL,CAASF,QAAT,CAAkBO,UAA7B;AACAD,aAAGE,EAAH,CAAM,OAAN,EAAe,SAASC,WAAT,CAAsBC,GAAtB,EAA2B;AACxCd,mBAAOc,GAAP;AACD,WAFD;AAGAJ,aAAGK,IAAH,CAAQ,MAAR,EAAgB,SAASC,UAAT,CAAqBC,QAArB,EAA+B;AAC7ClB;AACD,WAFD;AAGD,SAbK,CAAN;AAcD,OAfD,CAeE,OAAOe,GAAP,EAAY;AACZ,cAAKR,GAAL,CAASY,GAAT,CAAaC,KAAb,CAAmBL,GAAnB;AACD;AAlBY;AAmBd;AApBwC;kBAAtBlB,Q","file":"index.js","sourcesContent":["import Base from 'magnet-core/base'\nimport mongoose from 'mongoose'\nimport bluebird from 'bluebird'\nimport defaultConfig from './config/mongoose'\n\nexport default class Mongoose extends Base {\n  async setup () {\n    try {\n      await new Promise((resolve, reject) => {\n        let config = Object.assign(defaultConfig, this.config.mongoose, this.options)\n\n        this.app.mongoose = mongoose.connect(`mongodb://${config.host}/${config.database}`)\n        this.app.mongoose.Promise = bluebird\n\n        const db = this.app.mongoose.connection\n        db.on('error', function listenError (err) {\n          reject(err)\n        })\n        db.once('open', function listenOpen (callback) {\n          resolve()\n        })\n      })\n    } catch (err) {\n      this.app.log.error(err)\n    }\n  }\n}\n"]}